@import '../../../styles/baseline/_styles';

$background-slide-hover-duration: $duration-xlong;

.button_wrapper {
	display: flex;
	align-items: center;
	justify-content: center;
	width: fit-content;
	min-width: 171px;
	cursor: pointer;
	transition: all $hover-duration ease;

	@include respond-above($bp-md) {
		&:first-of-type {
			margin-left: initial;
		}

		&:last-of-type {
			margin-right: initial;
		}
	}

	@include respond-to($bp-md) {
		width: 100%;
		text-align: center;
		display: block;
	}
}
.button-underline {
	font-size: rem-calc(16);
	line-height: 20px;
	font-weight: $bold;
	transition: all $hover-duration ease;
	position: relative;
	z-index: 5;
	display: flex;
	align-items: center;
	justify-content: center;
}
.button {
	font-size: rem-calc(16);
	line-height: 14px;
	font-weight: $bold;
	transition: all $hover-duration ease;
	position: relative;
	z-index: 5;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 16px 20px;
	width: 100%;
	height: 100%;
	min-width: 171px;

	@include respond-to($bp-md) {
		min-width: initial;
	}
}

//Animations Hover underline
%underline {
	content: '';
	height: 0.125rem;
	width: 0;
	display: block;
	position: absolute;
	bottom: 8px;
	left: 0;
	transition: all $hover-duration;
}

//Animation Hover Background
%animationbg {
	content: '';
	width: 0;
	height: 100%;
	position: absolute;
	top: 0;
	left: -30px;
	transition: all $background-slide-hover-duration;
	transform: skewX(-45deg) translateX(-120%);
}

:global(.light-theme) .PrimaryReverse,
.PrimaryReverse {
	background-color: $tricentis-color;
	color: $white-color;
	position: relative;
	overflow: hidden;

	a,
	.is-decorative {
		z-index: 5;
	}

	&::after {
		@extend %animationbg;
	}

	&:hover {
		&::after {
			width: 140%;
			transform: skewX(-45deg) translateX(0);
			background-color: mix(black, $tricentis-color, 20%);
		}
	}

	&.disabled {
		background-color: $disabled-gray-light;
		color: $disabled-gray-dark;
	}
}

:global(.light-theme) .SecondaryDefault,
.SecondaryDefault {
	color: $accelerate-color;
	background-color: transparent;
	border: 2px solid $accelerate-color;
	position: relative;
	overflow: hidden;

	a,
	.is-decorative {
		z-index: 5;
	}

	&::after {
		@extend %animationbg;
	}

	&:hover {
		color: $white-color;
		border-color: mix(black, $accelerate-color, 20%);

		&::after {
			width: 140%;
			transform: skewX(-45deg) translateX(0);
			background-color: mix(black, $accelerate-color, 20%);
		}
	}

	&.disabled {
		border: 2px solid $disabled-brown-dark;
		color: $disabled-brown-dark;
	}
}

:global(.light-theme) .TertiaryDefault,
.TertiaryDefault {
	background-color: transparent;
	color: $accelerate-color;
	border: none;
	padding: 11px 0;
	min-width: auto;
	position: relative;

	&::after {
		@extend %underline;
	}

	svg {
		fill: $accelerate-color;
	}

	@include respond-to($bp-md) {
		display: flex;
		width: fit-content;
		justify-content: center;
	}

	&:hover {
		color: mix(black, $accelerate-color, 20%);

		.arrowIcon {
			transform: translateX(3px);

			svg {
				fill: mix(black, $accelerate-color, 20%);

				path {
					fill: mix(black, $accelerate-color, 20%) !important;
				}
			}
		}

		a,
		.is-decorative {
			color: mix(black, $accelerate-color, 20%);
		}

		&::after {
			background-color: mix(black, $accelerate-color, 20%);
			width: 100%;
		}
	}

	&.disabled {
		color: $disabled-brown-dark;
	}
}

:global(.light-theme) .TertiaryReverse,
.TertiaryReverse {
	color: $tricentis-color;
	border: none;
	padding: 11px 0;
	min-width: auto;
	position: relative;

	&::after {
		@extend %underline;
	}

	svg {
		fill: $tricentis-color;
	}

	@include respond-to($bp-md) {
		display: flex;
		width: fit-content;
		justify-content: center;
	}

	&:hover {
		color: mix(black, $tricentis-color, 20%);

		.arrowIcon {
			transform: translateX(3px);

			svg {
				fill: mix(black, $tricentis-color, 20%);
			}
		}

		&::after {
			background-color: mix(black, $tricentis-color, 20%);
			width: 100%;
		}
	}

	&.disabled {
		color: $disabled-gray-dark;
	}
}

.arrowIcon {
	padding-left: rem-calc(5);
	display: inline-block;
	transition: all $hover-duration ease-in;
}

:global(.midtone-theme) {
	.PrimaryDefault {
		background-color: $blaze-color;

		&:hover {
			&::after {
				background-color: mix(black, $blaze-color, 20%);
			}
		}
	}

	.PrimaryReverse {
		color: $blaze-color;
		background-color: $white-color;

		&:hover {
			&::after {
				background-color: $white-button-hover-color;
			}
		}
	}

	.SecondaryDefault {
		color: $blaze-color;
		border-color: $blaze-color;

		&:hover {
			color: $white-color;
			//	background-color: mix(black, $blaze-color, 20%);
			border-color: mix(black, $blaze-color, 20%);

			&::after {
				width: 140%;
				background-color: mix(black, $blaze-color, 20%);
			}
		}
	}

	.SecondaryReverse {
		color: $white-color;
		border-color: $white-color;

		&:hover {
			color: $blaze-color;
			//background-color: mix(black, $white-color, 20%);
			border-color: $white-button-hover-color;

			&::after {
				background-color: $white-button-hover-color;
			}
		}
	}

	.TertiaryDefault {
		color: $blaze-color;

		svg {
			path {
				fill: $blaze-color;
			}
		}

		&:hover {
			color: mix(black, $blaze-color, 20%);

			a,
			.is-decorative {
				svg {
					path {
						fill: mix(black, $blaze-color, 20%);
					}
				}
			}
		}

		&::after {
			background-color: mix(black, $blaze-color, 20%);
		}

		a:focus {
			border-bottom: 2px solid $blaze-color;
		}
	}

	.TertiaryReverse {
		color: $white-color;

		svg {
			path {
				fill: $white-color;
			}
		}

		&:hover {
			color: $white-color;

			&::after {
				width: 100%;
				background-color: $white-color;
			}
		}

		&:focus {
			color: $mist-color;

			svg {
				path {
					fill: $mist-color;
				}
			}

			&::after {
				background-color: $mist-color;
			}
		}
	}
}

:global(.dark-theme) {
	.PrimaryReverse {
		color: $blaze-color;
		background-color: $white-color;

		&:hover {
			&::after {
				background-color: $white-button-hover-color;
			}
		}
	}

	.SecondaryReverse {
		color: $white-color;
		border-color: $white-color;

		&:hover {
			color: $blaze-color;
			border-color: $white-button-hover-color;

			&::after {
				background-color: $white-button-hover-color;
			}
		}
	}

	.TertiaryReverse {
		color: $white-color;

		svg {
			path {
				fill: $white-color;
			}
		}

		&:hover {
			&::after {
				width: 100%;
				background-color: $white-color;
			}
		}

		&:focus {
			color: $mist-color;

			svg {
				path {
					fill: $mist-color;
				}
			}

			&::after {
				background-color: $mist-color;
			}
		}
	}
}

:global(.light-theme) .SecondaryReverse,
.SecondaryReverse {
	background-color: transparent;
	color: $tricentis-color;
	border: 2px solid $tricentis-color;
	position: relative;
	overflow: hidden;
	transition: all $background-slide-hover-duration;

	a {
		z-index: 5;
	}

	&::after {
		@extend %animationbg;
	}

	&:hover {
		color: $white-color;
		border: 2px solid mix(black, $tricentis-color, 20%);

		&::after {
			width: 140%;
			transform: skewX(-45deg) translateX(0);
			background-color: mix(black, $tricentis-color, 20%);
		}
	}

	&.disabled {
		border: 2px solid $disabled-gray-dark;
		color: $disabled-gray-dark;
	}

	&-white{
		background: transparent;
		color: $white-color;
		border: 2px solid $white-color;
		position: relative;
		overflow: hidden;
		transition: all $background-slide-hover-duration;

		a {
			z-index: 5;
		}

		&::after {
			@extend %animationbg;
		}

		&:hover {
			color: $blaze-color;
			border-color: $white-button-hover-color;

			&::after {
				width: 140%;
				transform: skewX(-45deg) translateX(0);
				background-color: $white-button-hover-color;
			}
		}
	}
}

:global(.light-theme) .PrimaryDefault,
.PrimaryDefault {
	background-color: $accelerate-color;
	color: $white-color;
	position: relative;
	overflow: hidden;

	a {
		z-index: 5;
	}

	&::after {
		@extend %animationbg;
	}

	&:hover {
		&::after {
			width: 140%;
			transform: skewX(-45deg) translateX(0);
			background-color: mix(black, $accelerate-color, 20%);
		}
	}

	&.disabled {
		background-color: $disabled-brown-light;
		color: $disabled-brown-dark;
	}
}

:global(.accessibility-colors .light-theme),
:global(.accessibility-colors .dark-theme .light-theme),
:global(.accessibility-colors .midtone-theme .light-theme),
:global(.accessibility-colors) {
	.PrimaryDefault {
		background-color: $accelerate-light;

		&:hover {
			background-color: mix(black, $accelerate-light, 20%);
		}
	}

	.SecondaryDefault {
		&:hover {
			background-color: mix(black, $accelerate-light, 20%);
		}
	}

	.TertiaryDefault {
		color: $accelerate-light;

		svg {
			fill: $accelerate-light;
		}

		&:hover {
			color: mix(black, $accelerate-light, 20%);

			.arrowIcon {
				svg {
					fill: mix(black, $accelerate-light, 20%);
				}
			}
		}

		a:focus {
			border-bottom: 2px solid $accelerate-light;
		}
	}
}

:global(.accessibility-colors .midtone-theme) {
	.PrimaryDefault {
		background-color: $blaze-color;
	}

	.SecondaryDefault {
		color: $blaze-color;
		border-color: $blaze-color;

		&:hover {
			color: $white-color;
			background-color: transparent;
			border-color: mix(black, $blaze-color, 20%);
		}
	}

	.TertiaryDefault {
		color: $blaze-color;

		svg {
			path {
				fill: $blaze-color;
			}
		}

		&:hover {
			color: mix(black, $blaze-color, 20%);

			a,
			.is-decorative {
				svg {
					path {
						fill: darnek($blaze-color, 20%);
					}
				}
			}
		}

		a:focus {
			border-bottom: 2px solid $blaze-color;
		}
	}
}

:global(.accessibility-colors .dark-theme) {
	.SecondaryDefault {
		border: 2px solid $accelerate-dark;

		&:hover {
			border-color: mix(black, $accelerate-dark, 20%);
		}
	}

	.TertiaryDefault {
		color: $accelerate-dark;

		svg {
			fill: $accelerate-dark;
		}

		&:hover {
			color: mix(black, $accelerate-dark, 20%);

			.arrowIcon {
				svg {
					fill: mix(black, $accelerate-dark, 20%);
				}
			}
		}

		a:focus {
			border-bottom: 2px solid $accelerate-dark;
		}
	}
}
